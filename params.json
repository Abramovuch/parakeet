{"body":"Parakeet is a just-in-time compiler for numerical Python, which can speed up your code by compiling native versions of a function for each distinct set of input types. Parakeet also exposes data parallel operators which enable high-level optimizations and parallelization. Parakeet is not a general-purpose compiler for all of Python but rather supports only a small set of language constructs useful for numerical computing. \r\n\r\nIf you're curious about how Parakeet relates to other runtime compilers for numerical Python, read this [post](http://www.phi-node.com/2013/01/a-journey-through-parakeet.html).\r\n\r\n### Data Parallel Operators\r\n\r\n* **map** ( _transform_, _X1_, ..., _Xn_, _axis_ = 0 ) traverses all the given inputs _X1_ ... _Xn_ along the specified array axis, and the function _transform_ on every sub-array encountered. Collect and concatenate the results of each function call to _transform_. \r\n\r\n* **reduce** ( _combine_, _X1_, ..., _Xn_, _axis_ = 0 )\r\n\r\n* **scan** ( _combine_, _X1_, ..., _Xn_, _axis_ = 0 ) \r\n\r\n* **allpairs** ( _transform_, _X_, _Y_, _axis_ = 0 )\r\n\r\n### Authors and Contributors\r\nWritten by Alex Rubinsteyn (@iskandr) and Eric Hielscher (@hielscher). ","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Parakeet","tagline":"Runtime accelerator for numerical Python "}